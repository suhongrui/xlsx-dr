# coding: utf-8
from unittest import TestCase
from xlsx.reader import XlsxReader
from datetime import datetime

__all__ = ['TestXlsxReader', ]


class TestXlsxReader(TestCase):
    """XlxsReader unit tests"""
    maxDiff = None

    def setUp(self):
        self.filename = 'tests/sources/simple.xlsx'
        self.valid_data = {
            "rows": {
                "0": [u"Fields", u"Values"],
                "1": [u"Person", u"Mary"],
                "2": [u"Age", 44],
                "3": [u"Income", 2000],
                "4": [u"Fee", -500],
                "5": [u"Birth", datetime(1970, 1, 3, 10, 0, 0, 3)],
                "6": [None, None],
                "7": [u"Clean income", u"=SUM(B4:B5)"]
            }
        }
        self.valid_image_map = [
            {
                'path': 'xl/media/image1.jpeg', 'pos': ('1', '2'),
                'descr': 'photo.jpg', 'id': '1'
            }
        ]

    def test_read_xlsx_file(self):
        """ test simple xlsx file parse automatically generated by
        `tools/make_simple_xlsx_file.py`"""

        xlsx_instance = XlsxReader(filename=self.filename)
        data = xlsx_instance.get_data()
        self.assertEqual(data, self.valid_data)

    def test_read_xlsx_range_file(self):
        """ tests big xlsx file with custom set range """
        xlsx_instance = XlsxReader(filename=self.filename)
        data = xlsx_instance.get_data(fmt='json', sheet_range='A1:D4')
        self.assertNotEqual(data, {})

    def test_process_images(self):
        """ test unpack and read position data about stored images """
        xlsx_instance = XlsxReader(filename=self.filename)
        data = xlsx_instance.get_images()
        self.assertEqual(data, self.valid_image_map)
